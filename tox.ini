; For all tests that run in Github Actions, see
; .github/workflows/cpu-ci.yml for the workflow definition.

[tox]
envlist = python3.8,test-gpu,test-cpu

[testenv]
commands =
    pip install --upgrade pip
    pip install .

[testenv:test-cpu]
; Runs in: Github Actions
; Runs all CPU-based tests. NOTE: if you are using an M1 mac, this will fail. You need to
; change the tensorflow dependency to `tensorflow-macos` in requirements/test-cpu.txt.
deps = -rrequirements/test.txt
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/NVTabular.git

    python -m pytest -rsx --cov-config tests/.coveragerc --cov-report term-missing --cov=. tests

[testenv:test-gpu]
sitepackages=true
; Runs in: Internal Jenkins
; Runs GPU-based tests.
; The jenkins jobs run on an image based on merlin-hugectr. This will include all cudf configuration
; and other gpu-specific libraries that we can enxpect will always exist. Thus, we don't need
; to install requirements.txt yet. As we get better at python environment isolation, we will
; need to add some back.
setenv = 
    TF_GPU_ALLOCATOR=cuda_malloc_async
deps =
    -rrequirements/test.txt
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/NVTabular.git

    python -m pytest -rsx --cov-config tests/.coveragerc --cov-report term-missing --cov=. tests

[testenv:lint]
; Runs in: Github Actions
; Runs all lint/code checks and fails the PR if there are errors.
; Install pre-commit-hooks to run these tests during development.
deps = -rrequirements/dev.txt
commands =
    python -m pip install --upgrade git+https://github.com/NVIDIA-Merlin/core.git
    flake8 transformers4rec tests merlin_standard_lib
    black --check --diff transformers4rec tests merlin_standard_lib
    isort -c . --skip .tox
    mypy transformers4rec --install-types --non-interactive --no-strict-optional --ignore-missing-imports
    codespell --skip .tox

[testenv:docs]
; Runs in: Github Actions
; Generates documentation with sphinx. There are other steps in the Github Actions workflow
; to publish the documentation on release.
changedir = {toxinidir}
deps = -rrequirements/docs.txt
commands =
    python -m sphinx.cmd.build -P -b html docs/source docs/build/html

[testenv:docs-multi]
; Run the multi-version build that is shown on GitHub Pages.
changedir = {toxinidir}
deps = -rrequirements/docs.txt
commands =
    sphinx-multiversion --dump-metadata docs/source docs/build/html | jq "keys"
    sphinx-multiversion docs/source docs/build/html

