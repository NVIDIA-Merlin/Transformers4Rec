name: Test

on:
  workflow_dispatch:
  push:
    branches: [main]
    tags:
      - v*
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        python-version: [3.9]
        os: [ubuntu-latest]

    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Ubuntu packages
        run: |
          sudo apt-get update -y
          sudo apt-get install -y protobuf-compiler pandoc
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip tox
      - name: Checking Manifest
        run: |
          pip install check-manifest
          check-manifest .
      - name: Build
        run: |
          python setup.py develop
      - name: Run unittests
        run: |
          tox -e test-cpu
      - name: Generate package for pypi
        run: |
          python setup.py sdist
      - name: Upload artifacts to github
        uses: actions/upload-artifact@v2
        with:
          name: dist
          path: dist
      # Build docs, treat warnings as errors (TODO SPHINXOPTS="-W -q")
      - name: Building docs
        run: |
          tox -e docs
      - name: Upload HTML
        uses: actions/upload-artifact@v2
        with:
          name: html-build-artifact
          path: docs/build/html
          if-no-files-found: error
          retention-days: 1
      - name: Store PR information
        run: |
          mkdir ./pr
          echo ${{ github.event.number }}              > ./pr/pr.txt
          echo ${{ github.event.pull_request.merged }} > ./pr/merged.txt
          echo ${{ github.event.action }}              > ./pr/action.txt
      - name: Upload PR information
        uses: actions/upload-artifact@v2
        with:
          name: pr
          path: pr/

  release:
    name: Release
    runs-on: ubuntu-latest
    if: "startsWith(github.ref, 'refs/tags/')"
    needs: [build]
    steps:
      - uses: actions/download-artifact@v2
        with:
          name: dist
      - name: Create GitHub Release
        uses: fnkr/github-action-ghr@v1.3
        env:
          GHR_PATH: .
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Push to PyPi
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_PASSWORD }}
        run: |
          pip install --upgrade wheel pip setuptools twine
          twine upload *
